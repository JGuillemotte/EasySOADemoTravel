
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package de.daenet.webservices.currencyserver;

import java.util.logging.Logger;

/**
 * This class was generated by Apache CXF 2.2.1
 * Wed Dec 09 15:29:03 CET 2009
 * Generated source version: 2.2.1
 * 
 */

@javax.jws.WebService(
                      serviceName = "CurrencyServerWebService",
                      portName = "CurrencyServerWebServiceHttpGet",
                      targetNamespace = "http://www.daenet.de/webservices/CurrencyServer",
                      //wsdlLocation = "file:currencyserverwebservice.wsdl",
                      endpointInterface = "de.daenet.webservices.currencyserver.CurrencyServerWebServiceHttpPost")
                      
public class CurrencyServerWebServiceHttpPostImpl implements CurrencyServerWebServiceHttpPost {

    private static final Logger LOG = Logger.getLogger(CurrencyServerWebServiceHttpPostImpl.class.getName());
    private ICurrencyServer currencyServer = CurrencyServerImpl.getInstance();
    
    /* (non-Javadoc)
     * @see de.daenet.webservices.currencyserver.CurrencyServerWebServiceHttpPost#getDollarValue(java.lang.String  provider ,)java.lang.String  currency )*
     */
    public double getDollarValue(java.lang.String provider,java.lang.String currency) { 
        LOG.info("Executing operation getDollarValue");
        System.out.println(provider);
        System.out.println(currency);
        try {
            double _return = 0.0;
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see de.daenet.webservices.currencyserver.CurrencyServerWebServiceHttpPost#getProviderTimestamp(java.lang.String  providerId ,)java.lang.String  provider )*
     */
    public java.lang.String getProviderTimestamp(java.lang.String providerId,java.lang.String provider) { 
        LOG.info("Executing operation getProviderTimestamp");
        System.out.println(providerId);
        System.out.println(provider);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see de.daenet.webservices.currencyserver.CurrencyServerWebServiceHttpPost#getProviderList(*
     */
    public java.lang.String getProviderList() { 
        LOG.info("Executing operation getProviderList");
        try {
            java.lang.String _return = "";
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see de.daenet.webservices.currencyserver.CurrencyServerWebServiceHttpPost#getDataSet(java.lang.String  provider )*
     */
    public de.daenet.webservices.currencyserver.DataSet getDataSet(java.lang.String provider) { 
        LOG.info("Executing operation getDataSet");
        System.out.println(provider);
        try {
            de.daenet.webservices.currencyserver.DataSet _return = null;
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see de.daenet.webservices.currencyserver.CurrencyServerWebServiceHttpPost#getXmlStream(java.lang.String  provider )*
     */
    public java.lang.String getXmlStream(java.lang.String provider) { 
        LOG.info("Executing operation getXmlStream");
        System.out.println(provider);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see de.daenet.webservices.currencyserver.CurrencyServerWebServiceHttpPost#getCurrencyValue(java.lang.String  provider ,)java.lang.String  srcCurrency ,)java.lang.String  dstCurrency )*
     */
    public double getCurrencyValue(java.lang.String provider,java.lang.String srcCurrency,java.lang.String dstCurrency) { 
        LOG.info("Executing operation getCurrencyValue");
        System.out.println(provider);
        System.out.println(srcCurrency);
        System.out.println(dstCurrency);
        try {
            return currencyServer.getCurrencyValue(provider, srcCurrency, dstCurrency);
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see de.daenet.webservices.currencyserver.CurrencyServerWebServiceHttpPost#getProviderDescription(java.lang.String  provider )*
     */
    public java.lang.String getProviderDescription(java.lang.String provider) { 
        LOG.info("Executing operation getProviderDescription");
        System.out.println(provider);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
