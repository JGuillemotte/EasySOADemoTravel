
/*
 * 
 */

package fr.inria.galaxy.orchestration.examples.trip.generated;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.1
 * Mon May 25 16:05:20 CEST 2009
 * Generated source version: 2.2.1
 * 
 */


@WebServiceClient(name = "orchestration_s-trip", 
                  wsdlLocation = "file:orchestration_s-trip.wsdl",
                  targetNamespace = "http://generated.trip.examples.orchestration.galaxy.inria.fr") 
public class OrchestrationSTrip extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://generated.trip.examples.orchestration.galaxy.inria.fr", "orchestration_s-trip");
    public final static QName OrchestrationSTripHttpEndpoint = new QName("http://generated.trip.examples.orchestration.galaxy.inria.fr", "orchestration_s-tripHttpEndpoint");
    public final static QName OrchestrationSTripHttpSoap12Endpoint = new QName("http://generated.trip.examples.orchestration.galaxy.inria.fr", "orchestration_s-tripHttpSoap12Endpoint");
    public final static QName OrchestrationSTripHttpSoap11Endpoint = new QName("http://generated.trip.examples.orchestration.galaxy.inria.fr", "orchestration_s-tripHttpSoap11Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("file:orchestration_s-trip.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:orchestration_s-trip.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public OrchestrationSTrip(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public OrchestrationSTrip(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OrchestrationSTrip() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns OrchestrationSTripPortType
     */
    @WebEndpoint(name = "orchestration_s-tripHttpEndpoint")
    public OrchestrationSTripPortType getOrchestrationSTripHttpEndpoint() {
        return super.getPort(OrchestrationSTripHttpEndpoint, OrchestrationSTripPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OrchestrationSTripPortType
     */
    @WebEndpoint(name = "orchestration_s-tripHttpEndpoint")
    public OrchestrationSTripPortType getOrchestrationSTripHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(OrchestrationSTripHttpEndpoint, OrchestrationSTripPortType.class, features);
    }
    /**
     * 
     * @return
     *     returns OrchestrationSTripPortType
     */
    @WebEndpoint(name = "orchestration_s-tripHttpSoap12Endpoint")
    public OrchestrationSTripPortType getOrchestrationSTripHttpSoap12Endpoint() {
        return super.getPort(OrchestrationSTripHttpSoap12Endpoint, OrchestrationSTripPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OrchestrationSTripPortType
     */
    @WebEndpoint(name = "orchestration_s-tripHttpSoap12Endpoint")
    public OrchestrationSTripPortType getOrchestrationSTripHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(OrchestrationSTripHttpSoap12Endpoint, OrchestrationSTripPortType.class, features);
    }
    /**
     * 
     * @return
     *     returns OrchestrationSTripPortType
     */
    @WebEndpoint(name = "orchestration_s-tripHttpSoap11Endpoint")
    public OrchestrationSTripPortType getOrchestrationSTripHttpSoap11Endpoint() {
        return super.getPort(OrchestrationSTripHttpSoap11Endpoint, OrchestrationSTripPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OrchestrationSTripPortType
     */
    @WebEndpoint(name = "orchestration_s-tripHttpSoap11Endpoint")
    public OrchestrationSTripPortType getOrchestrationSTripHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(OrchestrationSTripHttpSoap11Endpoint, OrchestrationSTripPortType.class, features);
    }

}
