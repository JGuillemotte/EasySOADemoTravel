
package fr.inria.galaxy.orchestration.examples.trip.generated;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.2.1
 * Mon May 25 16:05:20 CEST 2009
 * Generated source version: 2.2.1
 * 
 */

public final class OrchestrationSTripPortType_OrchestrationSTripHttpSoap11Endpoint_Client {

    private static final QName SERVICE_NAME = new QName("http://generated.trip.examples.orchestration.galaxy.inria.fr", "orchestration_s-trip");

    private OrchestrationSTripPortType_OrchestrationSTripHttpSoap11Endpoint_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = OrchestrationSTrip.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        OrchestrationSTrip ss = new OrchestrationSTrip(wsdlURL, SERVICE_NAME);
        OrchestrationSTripPortType port = ss.getOrchestrationSTripHttpSoap11Endpoint();  
        
        {
        System.out.println("Invoking process...");
        java.lang.String _process_param0 = "";
        java.lang.String _process_param1 = "";
        java.lang.Double _process_param2 = null;
        java.lang.String _process__return = port.process(_process_param0, _process_param1, _process_param2);
        System.out.println("process.result=" + _process__return);


        }

        System.exit(0);
    }

}
